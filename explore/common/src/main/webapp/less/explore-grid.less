.explore-grid {
  display: grid;
  grid-gap: 1em;

  &.explore-compact {
    grid-gap: 0.3em;
  }

  /*
     The explore-column-span-* classes can be used to control how many
     columns an item spans in a css grid
     */
  each(range(16), {
    .explore-column-span-@{value} {
      grid-column: span @value;
    }
  });
}

/*
 Makes a flex layout container.
 This will usually be used on a <div>.

 Note that flex containers don't participate in the responsive
 nature of the grid - they will remain grouped together even
 when the grid goes down to one column.
*/
.explore-flex-container {
  display: flex;
  width: 100%;

  &.explore-flex-wrap {
    flex-wrap: wrap;
  }

  /*
     The explore-grow-* classes can be used to control the width of 
     elements in a flex container via the flex grow attribute.
     */
  each(range(0, 4), {
    .explore-grow-@{value} {
      flex: @value;
    }
  });

  /*
      The explore-shrink-* classes can be used to control the width of 
      elements in a flex container via the flex shrink attribute.
      */
  each(range(0, 4), {
    .explore-shrink-@{value} {
      flex-shrink: @value;
    }
  });

  /*
     Applying to-end to an field will push that field and the ones
     that follow it to the end of the cell wrapper.
     */
  .explore-flex-end {
    margin-left: auto;
  }
}