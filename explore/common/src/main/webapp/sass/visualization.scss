.aladin-container {
  overflow: hidden; // Needed to keep the visualization svg inside the component
}

.jts {
  position: relative;
  pointer-events: none; // let aladin get pointer events
  z-index: 10; // Needs a z-index to sit on top of the catalog
}

@media screen and (min-resolution: 2dppx) {
  svg {
    shape-rendering: optimizeSpeed;
  }
}

.jts-polygon {
  stroke: gray;
  stroke-width: 2px;
  vector-effect: non-scaling-stroke; // Don't scale the stroke, otherwise it becomes invisible
}

.gmos-probe {
  display: none;
  stroke: red;
  z-index: 1;
  fill-opacity: 0.1;
}

.gmos-patrol-field {
  display: none;
  stroke: red;
  stroke-dasharray: 10;
}

.gmos-fpu > polygon {
  stroke: blue;
  stroke-width: 0.8px;
  fill: lightgray;
  fill-opacity: 0.1;
  vector-effect: non-scaling-stroke;
}

.gmos-science-area polygon {
  display: none;
  stroke: purple;
  fill: black;
  fill-opacity: 1;
}

.gmos-science-ccd-offset polygon {
  display: none;
  stroke: yellow;
  fill-opacity: 0.1;
}

.gmos-science-ccd > polygon {
  display: none;
  stroke: cyan;
  stroke-width: 1px;
  fill-opacity: 0.1;
  vector-effect: non-scaling-stroke;
}

.gmos-candidates-area {
  display: none;
  fill-opacity: 0;
  stroke: lightgreen;
  stroke-width: 0.4px;
  vector-effect: non-scaling-stroke;
  stroke-dasharray: 1.5;

  &.guide-star-candidate-target-visible {
    display: inline;
  }
}

// Shows a border around the whole SVG
.jts-svg-border {
  display: none;
  stroke: yellow;
  stroke-width: 2px;
  vector-effect: non-scaling-stroke;
  stroke-dasharray: 1;
}

.jts-svg-reticle {
  display: none;
}

.jts-svg-center {
  stroke: green;
  stroke-width: 2px;
  vector-effect: non-scaling-stroke;
}

.visualization-display {
  display: inline !important; // we use this as a toggle thus we need important set
}

.targets-overlay-svg {
  pointer-events: none; // let aladin get pointer events
  position: absolute;
  z-index: 20;
  vector-effect: non-scaling-stroke;

  .crosshair-target {
    stroke: hsl(84, 100%, 29.2%);
    stroke-width: 2px;
  }

  .circle-target {
    display: none;
  }

  .arrow-between-targets {
    stroke: darkblue;
    stroke-width: 2px;
    stroke-dasharray: 2;
  }

  .proper-motion-line-gs {
    display: none;
    &.guide-star-candidate-target-visible {
      display: inline;
    }
  }

  .guide-star-candidate-target {
    display: none;
    stroke: red;
    stroke-width: 1px;
    fill: red;
    fill-opacity: 0.5;
    isolation: initial;

    &.guide-star-candidate-target-visible {
      display: inline;
    }
  }

  .guide-star-candidate-target-base {
    display: none;
    stroke: black;
    stroke-width: 0.5px;
    fill: yellow;
    fill-opacity: 0.4;
    isolation: initial;
  }
}

.ui.vertical.menu.explore-aladin-settings-menu {
  background: var(--button-background-color-semi);
  border-color: var(--site-border-color);
  min-height: auto;
  margin-left: 0.1em;
  cursor: pointer;

  .item {
    padding: 0.6em;
  }
}

.explore-aladin-button {
  background: var(--button-background-color-semi);
}

@mixin aladin-button-mixin {
  position: absolute;
  z-index: 120;

  .ui.icon.button:not(.animated):not(.compact):not(.labeled) {
    padding: 0.4em;
  }

  .ui.icon.button {
    margin: 0;

    svg.svg-inline--fa {
      width: auto;
    }
  }
}

.explore-aladin-zoom-control {
  @include aladin-button-mixin();
  right: 10px;
  top: 50%;
  display: flex;
  flex-direction: column;
}

.explore-aladin-toolbox-button {
  @include aladin-button-mixin();
  top: 10px;
  left: 10px;
}

